package com.psi.easymanager.module;

import com.psi.easymanager.dao.DaoSession;
import de.greenrobot.dao.DaoException;

import com.psi.easymanager.dao.PxComboGroupDao;
import com.psi.easymanager.dao.PxComboProductRelDao;
import com.psi.easymanager.dao.PxFormatInfoDao;
import com.psi.easymanager.dao.PxProductInfoDao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
// KEEP INCLUDES END

/**
 * 套餐分组和商品rel
 */
public class PxComboProductRel implements java.io.Serializable {

    private Long id;
    /**
     * 对应服务器id
     */
     @SerializedName("id") @Expose
    private String objectId;
    /**
     * 虚拟删除 0：正常 1：删除 2：审核
     */
     @Expose
    private String delFlag;
    /**
     * 数量
     */
     @Expose
    private Integer num;
    /**
     * 重量
     */
     @Expose
    private Double weight;
    private Long pxComboGroupId;
    private Long pxProductId;
    private Long pxFormatId;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient PxComboProductRelDao myDao;

    private PxComboGroup dbComboGroup;
    private Long dbComboGroup__resolvedKey;

    private PxProductInfo dbProduct;
    private Long dbProduct__resolvedKey;

    private PxFormatInfo dbFormat;
    private Long dbFormat__resolvedKey;


    // KEEP FIELDS - put your custom fields here
    @Expose private PxComboGroup groupId;// 套餐分组 用于json解析
    @Expose private PxProductInfo productId;// 商品 用于json解析
    @Expose private PxFormatInfo formatId;//规格 用于json解析
    // KEEP FIELDS END

    public PxComboProductRel() {
    }

    public PxComboProductRel(Long id) {
        this.id = id;
    }

    public PxComboProductRel(Long id, String objectId, String delFlag, Integer num, Double weight, Long pxComboGroupId, Long pxProductId, Long pxFormatId) {
        this.id = id;
        this.objectId = objectId;
        this.delFlag = delFlag;
        this.num = num;
        this.weight = weight;
        this.pxComboGroupId = pxComboGroupId;
        this.pxProductId = pxProductId;
        this.pxFormatId = pxFormatId;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getPxComboProductRelDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getObjectId() {
        return objectId;
    }

    public void setObjectId(String objectId) {
        this.objectId = objectId;
    }

    public String getDelFlag() {
        return delFlag;
    }

    public void setDelFlag(String delFlag) {
        this.delFlag = delFlag;
    }

    public Integer getNum() {
        return num;
    }

    public void setNum(Integer num) {
        this.num = num;
    }

    public Double getWeight() {
        return weight;
    }

    public void setWeight(Double weight) {
        this.weight = weight;
    }

    public Long getPxComboGroupId() {
        return pxComboGroupId;
    }

    public void setPxComboGroupId(Long pxComboGroupId) {
        this.pxComboGroupId = pxComboGroupId;
    }

    public Long getPxProductId() {
        return pxProductId;
    }

    public void setPxProductId(Long pxProductId) {
        this.pxProductId = pxProductId;
    }

    public Long getPxFormatId() {
        return pxFormatId;
    }

    public void setPxFormatId(Long pxFormatId) {
        this.pxFormatId = pxFormatId;
    }

    /** To-one relationship, resolved on first access. */
    public PxComboGroup getDbComboGroup() {
        Long __key = this.pxComboGroupId;
        if (dbComboGroup__resolvedKey == null || !dbComboGroup__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            PxComboGroupDao targetDao = daoSession.getPxComboGroupDao();
            PxComboGroup dbComboGroupNew = targetDao.load(__key);
            synchronized (this) {
                dbComboGroup = dbComboGroupNew;
            	dbComboGroup__resolvedKey = __key;
            }
        }
        return dbComboGroup;
    }

    public void setDbComboGroup(PxComboGroup dbComboGroup) {
        synchronized (this) {
            this.dbComboGroup = dbComboGroup;
            pxComboGroupId = dbComboGroup == null ? null : dbComboGroup.getId();
            dbComboGroup__resolvedKey = pxComboGroupId;
        }
    }

    /** To-one relationship, resolved on first access. */
    public PxProductInfo getDbProduct() {
        Long __key = this.pxProductId;
        if (dbProduct__resolvedKey == null || !dbProduct__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            PxProductInfoDao targetDao = daoSession.getPxProductInfoDao();
            PxProductInfo dbProductNew = targetDao.load(__key);
            synchronized (this) {
                dbProduct = dbProductNew;
            	dbProduct__resolvedKey = __key;
            }
        }
        return dbProduct;
    }

    public void setDbProduct(PxProductInfo dbProduct) {
        synchronized (this) {
            this.dbProduct = dbProduct;
            pxProductId = dbProduct == null ? null : dbProduct.getId();
            dbProduct__resolvedKey = pxProductId;
        }
    }

    /** To-one relationship, resolved on first access. */
    public PxFormatInfo getDbFormat() {
        Long __key = this.pxFormatId;
        if (dbFormat__resolvedKey == null || !dbFormat__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            PxFormatInfoDao targetDao = daoSession.getPxFormatInfoDao();
            PxFormatInfo dbFormatNew = targetDao.load(__key);
            synchronized (this) {
                dbFormat = dbFormatNew;
            	dbFormat__resolvedKey = __key;
            }
        }
        return dbFormat;
    }

    public void setDbFormat(PxFormatInfo dbFormat) {
        synchronized (this) {
            this.dbFormat = dbFormat;
            pxFormatId = dbFormat == null ? null : dbFormat.getId();
            dbFormat__resolvedKey = pxFormatId;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here

    public PxComboGroup getGroupId() {
        return groupId;
    }

    public void setGroupId(PxComboGroup groupId) {
        this.groupId = groupId;
    }

    public PxProductInfo getProductId() {
        return productId;
    }

    public void setProductId(PxProductInfo productId) {
        this.productId = productId;
    }

    public PxFormatInfo getFormatId() {
        return formatId;
    }

    public void setFormatId(PxFormatInfo formatId) {
        this.formatId = formatId;
    }
    // KEEP METHODS END

}
