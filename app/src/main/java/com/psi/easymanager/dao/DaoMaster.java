package com.psi.easymanager.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.psi.easymanager.dao.PxDiscounSchemeDao;
import com.psi.easymanager.dao.PxTableInfoDao;
import com.psi.easymanager.dao.PxFormatInfoDao;
import com.psi.easymanager.dao.PxMethodInfoDao;
import com.psi.easymanager.dao.PxPrinterInfoDao;
import com.psi.easymanager.dao.PxProductInfoDao;
import com.psi.easymanager.dao.PxProductCategoryDao;
import com.psi.easymanager.dao.PxProductFormatRelDao;
import com.psi.easymanager.dao.PxProductMethodRefDao;
import com.psi.easymanager.dao.PxOrderInfoDao;
import com.psi.easymanager.dao.PxOrderDetailsDao;
import com.psi.easymanager.dao.PxExtraDetailsDao;
import com.psi.easymanager.dao.PxTableAlterationDao;
import com.psi.easymanager.dao.PxPromotioInfoDao;
import com.psi.easymanager.dao.PxPromotioDetailsDao;
import com.psi.easymanager.dao.OfficeDao;
import com.psi.easymanager.dao.UserDao;
import com.psi.easymanager.dao.PxExtraChargeDao;
import com.psi.easymanager.dao.PxTableExtraRelDao;
import com.psi.easymanager.dao.PxRechargePlanDao;
import com.psi.easymanager.dao.PxVipInfoDao;
import com.psi.easymanager.dao.PxVipCardTypeDao;
import com.psi.easymanager.dao.PxVipCardInfoDao;
import com.psi.easymanager.dao.PxRechargeRecordDao;
import com.psi.easymanager.dao.PxProductConfigPlanDao;
import com.psi.easymanager.dao.PxProductConfigPlanRelDao;
import com.psi.easymanager.dao.PxPayInfoDao;
import com.psi.easymanager.dao.PxOrderNumDao;
import com.psi.easymanager.dao.PxBestpayDao;
import com.psi.easymanager.dao.PxSetInfoDao;
import com.psi.easymanager.dao.PxBusinessHoursDao;
import com.psi.easymanager.dao.PxOptReasonDao;
import com.psi.easymanager.dao.PxWeiXinpayDao;
import com.psi.easymanager.dao.PxAlipayInfoDao;
import com.psi.easymanager.dao.PxComboGroupDao;
import com.psi.easymanager.dao.PxComboProductRelDao;
import com.psi.easymanager.dao.PxProductRemarksDao;
import com.psi.easymanager.dao.PrintDetailsDao;
import com.psi.easymanager.dao.PrintDetailsCollectDao;
import com.psi.easymanager.dao.PdConfigRelDao;
import com.psi.easymanager.dao.TableOrderRelDao;
import com.psi.easymanager.dao.PxVoucherDao;
import com.psi.easymanager.dao.PxPaymentModeDao;
import com.psi.easymanager.dao.EPaymentInfoDao;
import com.psi.easymanager.dao.PxOperationLogDao;
import com.psi.easymanager.dao.PxBuyCouponsDao;
import com.psi.easymanager.dao.SmackUUIDRecordDao;
import com.psi.easymanager.dao.PxTableAreaDao;
import com.psi.easymanager.dao.BTPrintDeviceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 15): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 15;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        PxDiscounSchemeDao.createTable(db, ifNotExists);
        PxTableInfoDao.createTable(db, ifNotExists);
        PxFormatInfoDao.createTable(db, ifNotExists);
        PxMethodInfoDao.createTable(db, ifNotExists);
        PxPrinterInfoDao.createTable(db, ifNotExists);
        PxProductInfoDao.createTable(db, ifNotExists);
        PxProductCategoryDao.createTable(db, ifNotExists);
        PxProductFormatRelDao.createTable(db, ifNotExists);
        PxProductMethodRefDao.createTable(db, ifNotExists);
        PxOrderInfoDao.createTable(db, ifNotExists);
        PxOrderDetailsDao.createTable(db, ifNotExists);
        PxExtraDetailsDao.createTable(db, ifNotExists);
        PxTableAlterationDao.createTable(db, ifNotExists);
        PxPromotioInfoDao.createTable(db, ifNotExists);
        PxPromotioDetailsDao.createTable(db, ifNotExists);
        OfficeDao.createTable(db, ifNotExists);
        UserDao.createTable(db, ifNotExists);
        PxExtraChargeDao.createTable(db, ifNotExists);
        PxTableExtraRelDao.createTable(db, ifNotExists);
        PxRechargePlanDao.createTable(db, ifNotExists);
        PxVipInfoDao.createTable(db, ifNotExists);
        PxVipCardTypeDao.createTable(db, ifNotExists);
        PxVipCardInfoDao.createTable(db, ifNotExists);
        PxRechargeRecordDao.createTable(db, ifNotExists);
        PxProductConfigPlanDao.createTable(db, ifNotExists);
        PxProductConfigPlanRelDao.createTable(db, ifNotExists);
        PxPayInfoDao.createTable(db, ifNotExists);
        PxOrderNumDao.createTable(db, ifNotExists);
        PxBestpayDao.createTable(db, ifNotExists);
        PxSetInfoDao.createTable(db, ifNotExists);
        PxBusinessHoursDao.createTable(db, ifNotExists);
        PxOptReasonDao.createTable(db, ifNotExists);
        PxWeiXinpayDao.createTable(db, ifNotExists);
        PxAlipayInfoDao.createTable(db, ifNotExists);
        PxComboGroupDao.createTable(db, ifNotExists);
        PxComboProductRelDao.createTable(db, ifNotExists);
        PxProductRemarksDao.createTable(db, ifNotExists);
        PrintDetailsDao.createTable(db, ifNotExists);
        PrintDetailsCollectDao.createTable(db, ifNotExists);
        PdConfigRelDao.createTable(db, ifNotExists);
        TableOrderRelDao.createTable(db, ifNotExists);
        PxVoucherDao.createTable(db, ifNotExists);
        PxPaymentModeDao.createTable(db, ifNotExists);
        EPaymentInfoDao.createTable(db, ifNotExists);
        PxOperationLogDao.createTable(db, ifNotExists);
        PxBuyCouponsDao.createTable(db, ifNotExists);
        SmackUUIDRecordDao.createTable(db, ifNotExists);
        PxTableAreaDao.createTable(db, ifNotExists);
        BTPrintDeviceDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        PxDiscounSchemeDao.dropTable(db, ifExists);
        PxTableInfoDao.dropTable(db, ifExists);
        PxFormatInfoDao.dropTable(db, ifExists);
        PxMethodInfoDao.dropTable(db, ifExists);
        PxPrinterInfoDao.dropTable(db, ifExists);
        PxProductInfoDao.dropTable(db, ifExists);
        PxProductCategoryDao.dropTable(db, ifExists);
        PxProductFormatRelDao.dropTable(db, ifExists);
        PxProductMethodRefDao.dropTable(db, ifExists);
        PxOrderInfoDao.dropTable(db, ifExists);
        PxOrderDetailsDao.dropTable(db, ifExists);
        PxExtraDetailsDao.dropTable(db, ifExists);
        PxTableAlterationDao.dropTable(db, ifExists);
        PxPromotioInfoDao.dropTable(db, ifExists);
        PxPromotioDetailsDao.dropTable(db, ifExists);
        OfficeDao.dropTable(db, ifExists);
        UserDao.dropTable(db, ifExists);
        PxExtraChargeDao.dropTable(db, ifExists);
        PxTableExtraRelDao.dropTable(db, ifExists);
        PxRechargePlanDao.dropTable(db, ifExists);
        PxVipInfoDao.dropTable(db, ifExists);
        PxVipCardTypeDao.dropTable(db, ifExists);
        PxVipCardInfoDao.dropTable(db, ifExists);
        PxRechargeRecordDao.dropTable(db, ifExists);
        PxProductConfigPlanDao.dropTable(db, ifExists);
        PxProductConfigPlanRelDao.dropTable(db, ifExists);
        PxPayInfoDao.dropTable(db, ifExists);
        PxOrderNumDao.dropTable(db, ifExists);
        PxBestpayDao.dropTable(db, ifExists);
        PxSetInfoDao.dropTable(db, ifExists);
        PxBusinessHoursDao.dropTable(db, ifExists);
        PxOptReasonDao.dropTable(db, ifExists);
        PxWeiXinpayDao.dropTable(db, ifExists);
        PxAlipayInfoDao.dropTable(db, ifExists);
        PxComboGroupDao.dropTable(db, ifExists);
        PxComboProductRelDao.dropTable(db, ifExists);
        PxProductRemarksDao.dropTable(db, ifExists);
        PrintDetailsDao.dropTable(db, ifExists);
        PrintDetailsCollectDao.dropTable(db, ifExists);
        PdConfigRelDao.dropTable(db, ifExists);
        TableOrderRelDao.dropTable(db, ifExists);
        PxVoucherDao.dropTable(db, ifExists);
        PxPaymentModeDao.dropTable(db, ifExists);
        EPaymentInfoDao.dropTable(db, ifExists);
        PxOperationLogDao.dropTable(db, ifExists);
        PxBuyCouponsDao.dropTable(db, ifExists);
        SmackUUIDRecordDao.dropTable(db, ifExists);
        PxTableAreaDao.dropTable(db, ifExists);
        BTPrintDeviceDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(PxDiscounSchemeDao.class);
        registerDaoClass(PxTableInfoDao.class);
        registerDaoClass(PxFormatInfoDao.class);
        registerDaoClass(PxMethodInfoDao.class);
        registerDaoClass(PxPrinterInfoDao.class);
        registerDaoClass(PxProductInfoDao.class);
        registerDaoClass(PxProductCategoryDao.class);
        registerDaoClass(PxProductFormatRelDao.class);
        registerDaoClass(PxProductMethodRefDao.class);
        registerDaoClass(PxOrderInfoDao.class);
        registerDaoClass(PxOrderDetailsDao.class);
        registerDaoClass(PxExtraDetailsDao.class);
        registerDaoClass(PxTableAlterationDao.class);
        registerDaoClass(PxPromotioInfoDao.class);
        registerDaoClass(PxPromotioDetailsDao.class);
        registerDaoClass(OfficeDao.class);
        registerDaoClass(UserDao.class);
        registerDaoClass(PxExtraChargeDao.class);
        registerDaoClass(PxTableExtraRelDao.class);
        registerDaoClass(PxRechargePlanDao.class);
        registerDaoClass(PxVipInfoDao.class);
        registerDaoClass(PxVipCardTypeDao.class);
        registerDaoClass(PxVipCardInfoDao.class);
        registerDaoClass(PxRechargeRecordDao.class);
        registerDaoClass(PxProductConfigPlanDao.class);
        registerDaoClass(PxProductConfigPlanRelDao.class);
        registerDaoClass(PxPayInfoDao.class);
        registerDaoClass(PxOrderNumDao.class);
        registerDaoClass(PxBestpayDao.class);
        registerDaoClass(PxSetInfoDao.class);
        registerDaoClass(PxBusinessHoursDao.class);
        registerDaoClass(PxOptReasonDao.class);
        registerDaoClass(PxWeiXinpayDao.class);
        registerDaoClass(PxAlipayInfoDao.class);
        registerDaoClass(PxComboGroupDao.class);
        registerDaoClass(PxComboProductRelDao.class);
        registerDaoClass(PxProductRemarksDao.class);
        registerDaoClass(PrintDetailsDao.class);
        registerDaoClass(PrintDetailsCollectDao.class);
        registerDaoClass(PdConfigRelDao.class);
        registerDaoClass(TableOrderRelDao.class);
        registerDaoClass(PxVoucherDao.class);
        registerDaoClass(PxPaymentModeDao.class);
        registerDaoClass(EPaymentInfoDao.class);
        registerDaoClass(PxOperationLogDao.class);
        registerDaoClass(PxBuyCouponsDao.class);
        registerDaoClass(SmackUUIDRecordDao.class);
        registerDaoClass(PxTableAreaDao.class);
        registerDaoClass(BTPrintDeviceDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
