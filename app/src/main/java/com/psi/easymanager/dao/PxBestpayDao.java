package com.psi.easymanager.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.psi.easymanager.module.PxBestpay;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "PxBestpay".
*/
public class PxBestpayDao extends AbstractDao<PxBestpay, Long> {

    public static final String TABLENAME = "PxBestpay";

    /**
     * Properties of entity PxBestpay.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property ObjectId = new Property(1, String.class, "objectId", false, "OBJECT_ID");
        public final static Property ShopCode = new Property(2, String.class, "shopCode", false, "SHOP_CODE");
        public final static Property DataKey = new Property(3, String.class, "dataKey", false, "DATA_KEY");
        public final static Property TradeKey = new Property(4, String.class, "tradeKey", false, "TRADE_KEY");
        public final static Property DelFlag = new Property(5, String.class, "delFlag", false, "DEL_FLAG");
    };


    public PxBestpayDao(DaoConfig config) {
        super(config);
    }
    
    public PxBestpayDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"PxBestpay\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ASC ," + // 0: id
                "\"OBJECT_ID\" TEXT," + // 1: objectId
                "\"SHOP_CODE\" TEXT," + // 2: shopCode
                "\"DATA_KEY\" TEXT," + // 3: dataKey
                "\"TRADE_KEY\" TEXT," + // 4: tradeKey
                "\"DEL_FLAG\" TEXT);"); // 5: delFlag
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"PxBestpay\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, PxBestpay entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String objectId = entity.getObjectId();
        if (objectId != null) {
            stmt.bindString(2, objectId);
        }
 
        String shopCode = entity.getShopCode();
        if (shopCode != null) {
            stmt.bindString(3, shopCode);
        }
 
        String dataKey = entity.getDataKey();
        if (dataKey != null) {
            stmt.bindString(4, dataKey);
        }
 
        String tradeKey = entity.getTradeKey();
        if (tradeKey != null) {
            stmt.bindString(5, tradeKey);
        }
 
        String delFlag = entity.getDelFlag();
        if (delFlag != null) {
            stmt.bindString(6, delFlag);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public PxBestpay readEntity(Cursor cursor, int offset) {
        PxBestpay entity = new PxBestpay( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // objectId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // shopCode
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // dataKey
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // tradeKey
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // delFlag
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, PxBestpay entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setObjectId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setShopCode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDataKey(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTradeKey(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setDelFlag(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(PxBestpay entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(PxBestpay entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
